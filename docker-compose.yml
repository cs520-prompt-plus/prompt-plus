version: "3"

services:
  app:
    build:
      context: ./back_end
      dockerfile: Dockerfile
      args:
        - uvicorn_extras=--reload --use-colors --log-level debug
    env_file:
      - ./back_end/.env
    depends_on:
      postgres_db:
        condition: service_healthy
    ports:
      - "8000:80"
    volumes:
      - "./back_end/app:/app/app:ro"
      - "./back_end/prisma:/app/prisma:ro"
    networks:
      - prisma-network

  postgres_db:
    image: postgres:15
    hostname: postgres_db
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: prisma
    ports:
      - "5432:5432"
    networks:
      - prisma-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 2s
      retries: 20
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prisma-studio:
    image: node:lts-alpine3.17
    working_dir: /usr/src/app
    volumes:
      - ./back_end/prisma:/usr/src/app/prisma
      - ./back_end/.env:/usr/src/app/.env
    command: npx prisma studio --port 5555 --browser none
    ports:
      - "5555:5555"
    env_file:
      - ./back_end/.env
    depends_on:
      postgres_db:
        condition: service_healthy
      app:
        condition: service_started
    networks:
      - prisma-network

volumes:
  postgres_data:

networks:
  prisma-network:
    driver: bridge
